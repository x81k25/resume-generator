# chat complete temperature for resume generation
anthropic_model_version: claude-sonnet-4-20250514
# chat complete temperature for resume generation
resume_gen_temp: 0.3
# chat completion temperature for cover letter generation
cover_letter_gen_temp: 1.0
# select how the ouptuts of the model generation are displayed
verbose_prompt: false
verbose_output: false
# number of responsibilities to use per professional experience, starting with the most recent
experience_count:
  - 7
  - 5
  - 3
# number of desired output characters for each of the top experiences
character_count:
  - 1500
  - 1000
  - 500
# statement to inform the LLM how outputs should be formatted when generating responses
list_form_clause: |
  Do not return any other additional skills. 
  Return only the list of skills with no additional context. 
  Format should be a dashed list.

json_form_clause: | 
  - Output only the json elements specified in the above instructions.
  - DO NOT output """```json""" or any other code block formatting.
  - If input is given as an array, the output should be given as an array.
  - Add no additional context.

# prompts
## resume generator prompts
### skills extraction
tech_skills_extraction_prompt: |
  - extract the technical skills required within this {{role_description}}
  - examples of technical skills to capture:
    - Programming concepts (object-oriented programming, RESTful APIs, microservices)
    - Development practices (test-driven development, CI/CD, code reviews)
    - Technical methodologies (agile development, DevOps practices)
    - System design skills (database design, system architecture)  
  - the definition of technical skills in this context does not include languages and cloud tools per se, but what is to be done with those tools.
  - return 10 items max
    - if there are more than 10 items, return the terms that best summarize the {{role_description}} requirements

tech_skills_extraction_tool:
  name: "extract_technical_skills"
  description: "Extract technical skills from a job description"
  input_schema:
    type: "object"
    properties:
      skills:
        type: "array"
        items:
          type: "string"
        description: "Array of technical skills extracted from the job description"
    required: ["skills"]

tech_tools_extraction_prompt: |
  - extract all technology tools, e.g. coding languages, cloud development tools, and any specific development methodologies required within this {{role_description}} 
  - these {{key_skills}} must be included 
  - return 10 items max
      - if there are more than 10 items, return the terms that best summarize the {{role_description}} requirements

tech_tools_extraction_tool:
  name: "extract_tech_tools"
  description: "Extract technology tools, languages, and methodologies from a job description"
  input_schema:
    type: "object"
    properties:
      tools:
        type: "array"
        items:
          type: "string"
        description: "Array of technology tools, languages, cloud tools, and development methodologies"
    required: ["tools"]

soft_skills_extraction_prompt: |
  - extract the key soft skills from this {{role_description}}
  - if no soft skills found, output "N/A"
  - return 10 items max
    - if there are more than 10 items, return the terms that best summarize the {{role_description}} requirements

soft_skills_extraction_tool:
 name: "extract_soft_skills"
 description: "Extract soft skills from a job description"
 input_schema:
   type: "object"
   properties:
     skills:
       type: "array"
       items:
         type: "string"
       description: "Array of soft skills, or ['N/A'] if none found"
   required: ["skills"]

### skill selection
select_all_experience_prompt: |
  - from these {{experience}} select all elements that demonstrate any of these required {{skills}}
  - select at least the {{experience_count}} most relevant elements 
  - return the complete experience objects with all original 'what', 'how', and 'result' fields.

select_all_experience_tool:
  name: "select_relevant_experience"
  description: "Select experience items that relate to specified skills"
  input_schema:
    type: "object"
    properties:
      selected_experience:
        type: "array"
        items:
          type: "object"
          properties:
            what:
              type: "string"
              description: "What was accomplished"
            how:
              type: "string"
              description: "How it was accomplished (methods and tools)"
            result:
              type: "string"
              description: "The measurable result or outcome"
          required: ["what", "how", "result"]
        description: "Array of complete experience objects that relate to the specified skills"
    required: ["selected_experience"]

select_most_relevant_experience_prompt: |
  - from {{experience}} select the {{experience_count}} most relevant entries that correspond to these {{skills}}
  - return the complete experience objects (with 'what', 'how', and 'result' fields) for the most relevant items.

select_most_relevant_experience_tool:
  name: "select_most_relevant_experience"
  description: "Select the most relevant experience items for specified skills"
  input_schema:
    type: "object"
    properties:
      selected_experience:
        type: "array"
        items:
          type: "object"
          properties:
            what:
              type: "string"
              description: "What was accomplished"
            how:
              type: "string"
              description: "How it was accomplished (methods and tools)"
            result:
              type: "string"
              description: "The measurable result or outcome"
          required: ["what", "how", "result"]
        description: "Array of the most relevant experience objects, limited to the specified count"
    required: ["selected_experience"]

### ensure content is derived from actual experience
verify_experience_prompt: |
  - ensure that all {{extracted_experience}} are derived from these {{original_experience}}
  - perform detailed validation to ensure no hallucination:
  - Any numbers, percentages, or quantitative results in extracted 'result' fields must match the original 'result' fields exactly
  - Source Referencing: For each extracted experience, identify which original experience item it came from
  - Only include experiences you can confidently trace back to the original data without any additions or creative interpretation.

verify_experience_tool:
  name: "verify_and_correct_experience"
  description: "Verify extracted experience is grounded in original data with strict validation criteria"
  input_schema:
    type: "object"
    properties:
      verified_experience:
        type: "array"
        items:
          type: "object"
          properties:
            what:
              type: "string"
              description: "What was accomplished"
            how:
              type: "string"
              description: "How it was accomplished (methods and tools)"
            result:
              type: "string"
              description: "The measurable result or outcome"
          required: ["what", "how", "result"]
        description: "Array of verified experience objects that are grounded in original experience"
    required: ["verified_experience"]

### extract hard skills from selected experiences
extract_hard_skills_prompt: |
  - from these {{experiences}} categorize skills into the following categories:
    - Programming Languages and Libraries
    - Cloud, Open-Source, and Database
    - Data Science Techniques
    - Data Visualization and Analysis
  - rules for inclusion/exclusion from each category:
  - Programming Languages and Libraries
    - Examples: Python, R, pandas, tensorflow
  - Cloud, Open-Source, and Database
    - AWS, Azure, SQL, dbt, Snowflake, Docker, EC2, S3, Google Cloud Storage
  - Data Science Techniques
    - Unsupervised learning, supervised learning, regression, classification, clustering
    - Do not include any coding libraries here, e.g. do not include pandas, numpy, or tensorflow
  - Data Visualization and Analysis
    - Include data visualization tools only
    - Examples: Tableau, PowerBI, ggplot, matplotlib, seaborn
    - Do not include any data science libraries that are not solely used for data visualization
  - include only the following types of skills:
    - Programming languages, frameworks, and libraries
    - Software tools and platforms
    - Statistical and mathematical methods
    - Data processing techniques
    - Machine learning algorithms
    - Database technologies
    - Technical protocols and standards
  - exclude all of the following:
    - Soft skills (e.g., leadership, communication)
    - Business terms and processes
    - Project management terminology
    - Team or interpersonal terms
  - follow these rules when extracting and categorizing:
    - The tools needed will always be within the "how" key:value pair
    - Extract only explicitly mentioned technical terms
    - Group similar items next to each e.g. Python, pandas, scikit-learn; AWS, EC2, S3
    - When grouping similar items next to each, always put the parent items first
      - Examples:
        - Python, pandas, scikit-learn (Python is the parent language, and the other elements are python libraries)
        - AWS, EC2, S3 (AWS is the name of the service provider, and EC2 and S3 are services provided by AWS)
  - Use the categories provided and only the categories provided
  - Verify each term appears in the source text
  - Process the elements as follows:
    - Read through all the bullet points carefully
    - Identify and extract technical skills based on the inclusion criteria
    - Categorize each skill into one of the provided categories
    - Group related tools and technologies as specified
    - Verify that each extracted term appears in the original text
  - select which items to choose based on these criteria in order:
    - Each item should only appear in 1 category
    - Prioritize items that appear multiple times in {{experience}}
    - If there are more than 10 items in a category, delete the items based on the above criteria
    - Verify that every item used appears in {{experience}} at least once

extract_hard_skills_tool:
  name: "extract_and_categorize_hard_skills"
  description: "Extract and categorize hard skills from experience into predefined categories"
  input_schema:
    type: "object"
    properties:
      programming_languages_and_libraries:
        type: "string"
        description: "Comma-separated string of programming languages and libraries"
      cloud_open_source_and_database_tools:
        type: "string"
        description: "Comma-separated string of cloud, open-source, and database tools"
      data_science_techniques:
        type: "string"
        description: "Comma-separated string of data science techniques"
      data_visualization_and_analysis:
        type: "string"
        description: "Comma-separated string of data visualization and analysis tools"
    required: ["programming_languages_and_libraries", "cloud_open_source_and_database_tools", "data_science_techniques", "data_visualization_and_analysis"]

### format experience
format_experience_prompt: |
  - For each {{experience}}, create a statement using this structure:
    - Begin with a technical action verb derived from the "what" aspect
    - Include implementation details from the "how" aspect
    - Emphasize how items from <experience> that are also included in {{skills}}
    - Remove or de-emphasize how items from <experience> that are not present in {{skills}}
    - State the business purpose or context
    - End with the result
  - Individual sentence output formatting instructions:
    - Use the CAR format for resume writing
    - Attempt to make each sentence AST optimized
      - But do not remove highly relevant content of elements with {{skills}} in order to reach AST compliance
    - Do not include titles or context prefixes for the array
    - Do not include the parenthesis from the how section; replace with natural language
  - For the collections of outputs as a whole:
    - Avoid excessive repetition
      - if two subsequent action verbs are identical, alter the second to be a slightly different verb
      - using different verbs when referring to tools used, e.g. don't say "using Python" in every bullet point
      - focus on action verbs that connotate individual contributions, and not project management
    - If the same skill is used for multiple bullet points, make sure to include other how items to reduce over-repetition
    - Select the ordering of the sentences based on the relevance to the {{skills}}
    - Order the statement in order of the item most relevant to the {{skills}} to that least relevant to the provided {{skills}}
    - the total character count of the output should be approximately {{character_count}} 
      - if the the output is slightly over the {{character_count}}, try to remove unnecessary words
      - if the output it significantly over the {{character_count}}, remove unnecessary bullet points based off those which are least relevant to the <skills>

format_experience_tool:
  name: "format_experience_statements"
  description: "Convert structured experience to formatted resume statements"
  input_schema:
    type: "object"
    properties:
      formatted_statements:
        type: "array"
        items:
          type: "string"
        description: "Array of formatted resume statements, one per experience item, ordered by relevance to skills"
    required: ["formatted_statements"]

### generate role titles
generate_role_title_prompt: |
  - return only one job title given the following list of experience: {{experience}}
  - generate a concise, professional job title that best represents the overall experience and skills demonstrated.

generate_role_title_tool:
  name: "generate_role_title"
  description: "Generate a single job title based on experience"
  input_schema:
    type: "object"
    properties:
      job_title:
        type: "string"
        description: "A single, concise job title that represents the experience"
    required: ["job_title"]